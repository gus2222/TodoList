{"ast":null,"code":"var _jsxFileName = \"/home/gustavo/ITALENTS/ATIVIDADE3/src/components/TaskForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './TaskForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskForm = ({\n  addTask\n}) => {\n  _s();\n  const [taskName, setTaskName] = useState('');\n  const [dueDate, setDueDate] = useState('');\n  const [isCompleted, setIsCompleted] = useState(false);\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (taskName) {\n      addTask({\n        taskName,\n        dueDate,\n        isCompleted\n      });\n      setTaskName('');\n      setDueDate('');\n      setIsCompleted(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"task-form\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: taskName,\n      onChange: e => setTaskName(e.target.value),\n      placeholder: \"T\\xEDtulo da Tarefa (obrigat\\xF3rio)\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      value: dueDate,\n      onChange: e => setDueDate(e.target.value),\n      placeholder: \"Data (opcional)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: isCompleted,\n        onChange: () => setIsCompleted(!isCompleted)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), \"Conclu\\xEDda\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Adicionar Tarefa\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskForm, \"qUI9V8wvkO1bRLjcdDkjVfAxLBU=\");\n_c = TaskForm;\nexport default TaskForm;\nvar _c;\n$RefreshReg$(_c, \"TaskForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TaskForm","addTask","_s","taskName","setTaskName","dueDate","setDueDate","isCompleted","setIsCompleted","handleSubmit","e","preventDefault","className","onSubmit","children","type","value","onChange","target","placeholder","required","fileName","_jsxFileName","lineNumber","columnNumber","checked","_c","$RefreshReg$"],"sources":["/home/gustavo/ITALENTS/ATIVIDADE3/src/components/TaskForm.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './TaskForm.css';\n\nconst TaskForm = ({ addTask }) => {\n  const [taskName, setTaskName] = useState('');\n  const [dueDate, setDueDate] = useState('');\n  const [isCompleted, setIsCompleted] = useState(false);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (taskName) {\n      addTask({ taskName, dueDate, isCompleted });\n      setTaskName('');\n      setDueDate('');\n      setIsCompleted(false);\n    }\n  };\n\n  return (\n    <form className=\"task-form\" onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        value={taskName}\n        onChange={(e) => setTaskName(e.target.value)}\n        placeholder=\"Título da Tarefa (obrigatório)\"\n        required\n      />\n      <input\n        type=\"date\"\n        value={dueDate}\n        onChange={(e) => setDueDate(e.target.value)}\n        placeholder=\"Data (opcional)\"\n      />\n      <label>\n        <input\n          type=\"checkbox\"\n          checked={isCompleted}\n          onChange={() => setIsCompleted(!isCompleted)}\n        />\n        Concluída\n      </label>\n      <button type=\"submit\">Adicionar Tarefa</button>\n    </form>\n  );\n};\n\nexport default TaskForm;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,MAAMC,QAAQ,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EAChC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACU,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAErD,MAAMY,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAIR,QAAQ,EAAE;MACZF,OAAO,CAAC;QAAEE,QAAQ;QAAEE,OAAO;QAAEE;MAAY,CAAC,CAAC;MAC3CH,WAAW,CAAC,EAAE,CAAC;MACfE,UAAU,CAAC,EAAE,CAAC;MACdE,cAAc,CAAC,KAAK,CAAC;IACvB;EACF,CAAC;EAED,oBACET,OAAA;IAAMa,SAAS,EAAC,WAAW;IAACC,QAAQ,EAAEJ,YAAa;IAAAK,QAAA,gBACjDf,OAAA;MACEgB,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEb,QAAS;MAChBc,QAAQ,EAAGP,CAAC,IAAKN,WAAW,CAACM,CAAC,CAACQ,MAAM,CAACF,KAAK,CAAE;MAC7CG,WAAW,EAAC,sCAAgC;MAC5CC,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eACFzB,OAAA;MACEgB,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEX,OAAQ;MACfY,QAAQ,EAAGP,CAAC,IAAKJ,UAAU,CAACI,CAAC,CAACQ,MAAM,CAACF,KAAK,CAAE;MAC5CG,WAAW,EAAC;IAAiB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CAAC,eACFzB,OAAA;MAAAe,QAAA,gBACEf,OAAA;QACEgB,IAAI,EAAC,UAAU;QACfU,OAAO,EAAElB,WAAY;QACrBU,QAAQ,EAAEA,CAAA,KAAMT,cAAc,CAAC,CAACD,WAAW;MAAE;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9C,CAAC,gBAEJ;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACRzB,OAAA;MAAQgB,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAgB;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3C,CAAC;AAEX,CAAC;AAACtB,EAAA,CAzCIF,QAAQ;AAAA0B,EAAA,GAAR1B,QAAQ;AA2Cd,eAAeA,QAAQ;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}